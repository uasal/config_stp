name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest toml

    - name: Run Tests and Save Results
      id: pytest_results
      run: |
        pytest tests/ --tb=short --maxfail=1 --junitxml=report.xml | tee pytest_output.txt

        # Extract test counts from pytest output
        PASSED=$(python -c "import re; f=open('pytest_output.txt').read(); match=re.search(r'(\d+) passed', f); print(match.group(1) if match else '0')")
        FAILED=$(python -c "import re; f=open('pytest_output.txt').read(); match=re.search(r'(\d+) failed', f); print(match.group(1) if match else '0')")

        # Default values to 0 if empty
        PASSED=${PASSED:-0}
        FAILED=${FAILED:-0}

        COMMIT_HASH=$(git rev-parse --short HEAD)
        COMMIT_DATE=$(git show -s --format=%cd --date=format:'%m/%d/%y' $COMMIT_HASH)

        echo "PASSED_TESTS=$PASSED" >> $GITHUB_ENV
        echo "FAILED_TESTS=$FAILED" >> $GITHUB_ENV
        echo "LATEST_COMMIT=$COMMIT_HASH" >> $GITHUB_ENV
        echo "LATEST_COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV

        echo "Extracted Test Results:"
        echo "PASSED: $PASSED"
        echo "FAILED: $FAILED"
    
    - name: Update README with Test Results
      shell: bash
      run: |
        echo "Before Updating README.md:"
        cat README.md | grep "✅ Passed"

        # Perform the actual replacement
        #sed -i -E "s#✅ Passed: [0-9]+  \|  ❌ Failed: [0-9]+  \|  🔗 Last Passing Build \(.*\): .*#✅ Passed: ${PASSED_TESTS}  |  ❌ Failed: ${FAILED_TESTS}  |  🔗 Last Passing Build (${LATEST_COMMIT_DATE}): ${LATEST_COMMIT}#g" README.md

        sed -i -E "s#✅ Passed: [0-9]+  \|  ❌ Failed: [0-9]+  \|  🔗 Last Passing Build \(.*\): .*#✅ Passed: ${PASSED_TESTS}  |  ❌ Failed: ${FAILED_TESTS}  |  🔗 Last Passing Build (${LATEST_COMMIT_DATE}): \`${LATEST_COMMIT}\`#g" README.md


        echo "After Updating README.md:"
        cat README.md | grep "✅ Passed"

        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -u
        git commit -m "Update README with latest test results and last successful commit date" || echo "No changes to commit"
        git push || echo "No changes to push"
